#summary Factories for SSLContext.
#labels Featured,Phase-Requirements

= Introduction =

Many Java applications that use SSL rely on the configuration of [http://java.sun.com/j2se/1.5.0/docs/api/java/security/KeyStore.html KeyStores]. The default configuration is often based on VM properties such as `javax.net.ssl.keyStore`, `javax.net.ssl.keyStorePassword`, `javax.net.ssl.keyStoreProvider` and `javax.net.ssl.trustStore`.

However, this does not make it possible to configure conveniently more advanced uses such as Certificate Revocation Lists (CRLs) or custom [http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/TrustManager.html TrustManagers].
In most cases, configuring these settings is done in order to create and initialise an [http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/SSLContext.html SSLContext], which is subsequently used for creating instances  of `SSLSocketFactory` and `SSLSocket`.

The package `jsslutils.sslcontext` provides `SSLSocketFactory` and sub-classes that can be used to separate the configuration of the `SSLContext` from the classes using it.


= SSLSocketFactory =

*`SSLSocketFactory`* is default SSLSocketFactory. It builds an SSLContext from default values, in particular, using `SSLContext.init(null,null,null)`, which calls the default relevant factories from highest priority provider.

Classes consuming an instance of SSLSocketFactory (subclasses included) should expect *`newInitializedSSLContext(String contextProtocol)`* and *`newInitializedSSLContext()`* to return an initialised `SSLContext` ready to be used from creating socket factories.

= X509SSLContextFactory =

*`X509SSLContextFactory`* is a subclass of `SSLSocketFactory` that creates an SSLSocketFactory using the *!SunX509* algorithm for both [http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/KeyManagerFactory.html KeyManagerFactory] and [http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/TrustManagerFactory.html TrustManagerFactory]. It can be initialised with a `KeyStore` for the key store (holding the private credentials) and the trust store.

= PKIXSSLContextFactory =

*`PKIXSSLContextFactory`* is a subclass of `X509SSLContextFactory` that uses a *PKIX*-based trust manager. It also comprises methods to set up CRLs.

= TrustAllClientsX509SSLContextFactory =

*`TrustAllClientsX509SSLContextFactory`* is a subclass of `SSLContextFactory` that accepts all client-certificates: it does not check CA certificates nor time validity.
Use with caution!